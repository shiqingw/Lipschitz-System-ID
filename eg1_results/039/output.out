==> torch device:  cuda:2
==> Test-Train split: test_ratio = 0.20
==> Test-Train split seed:  None
==> Further split: further_train_ratio = 0.50
==> Further split seed:  None
==> Lipschitz constant: 4.00
==> Input bias to be applied to the neural network:
[0. 0.]
==> Input transform to be applied to the neural network:
[0.6513385 0.6513385]
==> Ouput transform to be applied to the neural network:
[3.0863 3.0863]
==> Evaluating model...
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
NeuralNetwork                            [1, 2]                    6
├─Sequential: 1-1                        [1, 2]                    --
│    └─SandwichFc: 2-1                   [1, 64]                   4,353
│    └─SandwichFc: 2-2                   [1, 64]                   8,321
│    └─SandwichFc: 2-3                   [1, 64]                   8,321
│    └─SandwichFc: 2-4                   [1, 64]                   8,321
│    └─SandwichFc: 2-5                   [1, 64]                   8,321
│    └─SandwichFc: 2-6                   [1, 64]                   8,321
│    └─SandwichFc: 2-7                   [1, 64]                   8,321
│    └─SandwichLin: 2-8                  [1, 2]                    135
├─Sequential: 1-2                        [1, 2]                    (recursive)
│    └─SandwichFc: 2-9                   [1, 64]                   (recursive)
│    └─SandwichFc: 2-10                  [1, 64]                   (recursive)
│    └─SandwichFc: 2-11                  [1, 64]                   (recursive)
│    └─SandwichFc: 2-12                  [1, 64]                   (recursive)
│    └─SandwichFc: 2-13                  [1, 64]                   (recursive)
│    └─SandwichFc: 2-14                  [1, 64]                   (recursive)
│    └─SandwichFc: 2-15                  [1, 64]                   (recursive)
│    └─SandwichLin: 2-16                 [1, 2]                    (recursive)
==========================================================================================
Total params: 54,420
Trainable params: 54,414
Non-trainable params: 6
Total mult-adds (Units.MEGABYTES): 0.11
==========================================================================================
Input size (MB): 0.00
Forward/backward pass size (MB): 0.01
Params size (MB): 0.22
Estimated Total Size (MB): 0.22
==========================================================================================
==> Saving initial model weights...
==> Start training...
==> Number of param_groups in optimizer: 1
Epoch: 001 | Train Loss: 19.3631363 | Grad norm: 19.040220 | Time: 7s288ms
Epoch: 001 | Test Loss: 18.8124857 | Time: 510ms
==> Save the model at epoch 001 with test loss 18.8124857
Epoch: 002 | Train Loss: 2.7894195 | Grad norm: 9.153399 | Time: 7s159ms
Epoch: 002 | Test Loss: 0.0049266 | Time: 458ms
==> Save the model at epoch 002 with test loss 0.0049266
Epoch: 003 | Train Loss: 0.0153811 | Grad norm: 5.699884 | Time: 6s868ms
Epoch: 003 | Test Loss: 0.0158653 | Time: 460ms
Epoch: 004 | Train Loss: 0.0285437 | Grad norm: 7.312100 | Time: 6s887ms
Epoch: 004 | Test Loss: 0.0216652 | Time: 467ms
Epoch: 005 | Train Loss: 0.0275530 | Grad norm: 6.544441 | Time: 6s798ms
Epoch: 005 | Test Loss: 0.0172996 | Time: 457ms
Epoch: 006 | Train Loss: 0.0249810 | Grad norm: 6.823431 | Time: 6s832ms
Epoch: 006 | Test Loss: 0.0235773 | Time: 458ms
Epoch: 007 | Train Loss: 0.0319789 | Grad norm: 7.364598 | Time: 6s844ms
Epoch: 007 | Test Loss: 0.0238236 | Time: 460ms
Epoch: 008 | Train Loss: 0.0483607 | Grad norm: 9.021857 | Time: 7s21ms
Epoch: 008 | Test Loss: 0.0795749 | Time: 482ms
Epoch: 009 | Train Loss: 0.0986211 | Grad norm: 13.350165 | Time: 6s845ms
Epoch: 009 | Test Loss: 0.0214716 | Time: 466ms
Epoch: 010 | Train Loss: 0.0334561 | Grad norm: 6.752472 | Time: 6s786ms
Epoch: 010 | Test Loss: 0.0232291 | Time: 467ms
Epoch: 011 | Train Loss: 0.0300058 | Grad norm: 6.378506 | Time: 6s752ms
Epoch: 011 | Test Loss: 0.0286314 | Time: 463ms
Epoch: 012 | Train Loss: 0.0307639 | Grad norm: 5.646920 | Time: 6s981ms
Epoch: 012 | Test Loss: 0.0144001 | Time: 541ms
Epoch: 013 | Train Loss: 0.0237811 | Grad norm: 5.598209 | Time: 7s1ms
Epoch: 013 | Test Loss: 0.0177035 | Time: 474ms
Epoch: 014 | Train Loss: 0.0222313 | Grad norm: 5.166193 | Time: 6s913ms
Epoch: 014 | Test Loss: 0.0191748 | Time: 452ms
Epoch: 015 | Train Loss: 0.0180802 | Grad norm: 4.868754 | Time: 7s13ms
Epoch: 015 | Test Loss: 0.0164195 | Time: 547ms
Epoch: 016 | Train Loss: 0.0156454 | Grad norm: 4.471576 | Time: 7s30ms
Epoch: 016 | Test Loss: 0.0121526 | Time: 463ms
Epoch: 017 | Train Loss: 0.0140823 | Grad norm: 4.117714 | Time: 6s723ms
Epoch: 017 | Test Loss: 0.0164394 | Time: 477ms
Epoch: 018 | Train Loss: 0.0139126 | Grad norm: 3.686321 | Time: 6s887ms
Epoch: 018 | Test Loss: 0.0096060 | Time: 537ms
Epoch: 019 | Train Loss: 0.0126814 | Grad norm: 3.496093 | Time: 7s315ms
Epoch: 019 | Test Loss: 0.0076900 | Time: 466ms
Epoch: 020 | Train Loss: 0.0106092 | Grad norm: 3.332039 | Time: 6s907ms
Epoch: 020 | Test Loss: 0.0119189 | Time: 478ms
Epoch: 021 | Train Loss: 0.0098397 | Grad norm: 3.098476 | Time: 7s159ms
Epoch: 021 | Test Loss: 0.0107432 | Time: 530ms
Epoch: 022 | Train Loss: 0.0086649 | Grad norm: 2.824159 | Time: 6s934ms
Epoch: 022 | Test Loss: 0.0052964 | Time: 465ms
Epoch: 023 | Train Loss: 0.0075117 | Grad norm: 2.569936 | Time: 6s740ms
Epoch: 023 | Test Loss: 0.0066260 | Time: 463ms
Epoch: 024 | Train Loss: 0.0070388 | Grad norm: 2.352167 | Time: 6s886ms
Epoch: 024 | Test Loss: 0.0079066 | Time: 458ms
Epoch: 025 | Train Loss: 0.0060855 | Grad norm: 2.124467 | Time: 7s313ms
Epoch: 025 | Test Loss: 0.0068873 | Time: 466ms
Epoch: 026 | Train Loss: 0.0057787 | Grad norm: 1.911879 | Time: 6s969ms
Epoch: 026 | Test Loss: 0.0061145 | Time: 460ms
Epoch: 027 | Train Loss: 0.0054285 | Grad norm: 1.619076 | Time: 6s784ms
Epoch: 027 | Test Loss: 0.0086646 | Time: 467ms
Epoch: 028 | Train Loss: 0.0046639 | Grad norm: 1.281029 | Time: 7s195ms
Epoch: 028 | Test Loss: 0.0060868 | Time: 473ms
Epoch: 029 | Train Loss: 0.0037314 | Grad norm: 0.880057 | Time: 6s788ms
Epoch: 029 | Test Loss: 0.0032446 | Time: 464ms
==> Save the model at epoch 029 with test loss 0.0032446
Epoch: 030 | Train Loss: 0.0034964 | Grad norm: 0.726269 | Time: 7s144ms
Epoch: 030 | Test Loss: 0.0036547 | Time: 449ms
Epoch: 031 | Train Loss: 0.0032303 | Grad norm: 0.593807 | Time: 7s76ms
Epoch: 031 | Test Loss: 0.0033095 | Time: 468ms
Epoch: 032 | Train Loss: 0.0030124 | Grad norm: 0.430981 | Time: 6s934ms
Epoch: 032 | Test Loss: 0.0030188 | Time: 456ms
==> Save the model at epoch 032 with test loss 0.0030188
Epoch: 033 | Train Loss: 0.0029687 | Grad norm: 0.410634 | Time: 6s753ms
Epoch: 033 | Test Loss: 0.0030932 | Time: 456ms
Epoch: 034 | Train Loss: 0.0029283 | Grad norm: 0.390796 | Time: 7s20ms
Epoch: 034 | Test Loss: 0.0030117 | Time: 467ms
==> Save the model at epoch 034 with test loss 0.0030117
Epoch: 035 | Train Loss: 0.0028672 | Grad norm: 0.352255 | Time: 6s892ms
Epoch: 035 | Test Loss: 0.0028645 | Time: 457ms
==> Save the model at epoch 035 with test loss 0.0028645
Epoch: 036 | Train Loss: 0.0027849 | Grad norm: 0.278029 | Time: 6s793ms
Epoch: 036 | Test Loss: 0.0028759 | Time: 583ms
Epoch: 037 | Train Loss: 0.0027654 | Grad norm: 0.253604 | Time: 6s720ms
Epoch: 037 | Test Loss: 0.0028082 | Time: 537ms
==> Save the model at epoch 037 with test loss 0.0028082
Epoch: 038 | Train Loss: 0.0027358 | Grad norm: 0.220639 | Time: 6s751ms
Epoch: 038 | Test Loss: 0.0028352 | Time: 454ms
Epoch: 039 | Train Loss: 0.0027082 | Grad norm: 0.182653 | Time: 6s980ms
Epoch: 039 | Test Loss: 0.0027533 | Time: 456ms
==> Save the model at epoch 039 with test loss 0.0027533
Epoch: 040 | Train Loss: 0.0026977 | Grad norm: 0.161527 | Time: 7s174ms
Epoch: 040 | Test Loss: 0.0027494 | Time: 535ms
==> Save the model at epoch 040 with test loss 0.0027494
Total time: 4m57s
==> Saving trained model weights...
==> Input bias to be applied to the neural network (trained):
[0. 0.]
==> Input transform to be applied to the neural network (trained):
[0.6513385 0.6513385]
==> Output transform to be applied to the neural network (trained):
[3.0863 3.0863]
==> Saving training info...
==> Drawing training loss...
==> Drawing grad norm...
==> Drawing testing loss...
==> Process finished.
