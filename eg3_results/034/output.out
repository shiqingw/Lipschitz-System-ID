==> torch device:  cuda:1
==> Test-Train split: test_ratio = 0.20
==> Test-Train split seed:  None
==> Further split: further_train_ratio = 1.00
==> Further split seed:  None
==> Input bias to be applied to the neural network:
[0. 0. 0. 0.]
==> Input transform to be applied to the neural network:
[0.708416   0.723275   0.6768648  0.67421794]
==> Ouput transform to be applied to the neural network:
[0.2262 0.2874]
==> Evaluating model...
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
NeuralNetwork                            [1, 2]                    10
├─Sequential: 1-1                        [1, 2]                    --
│    └─Linear: 2-1                       [1, 64]                   320
│    └─ReLU: 2-2                         [1, 64]                   --
│    └─Linear: 2-3                       [1, 64]                   4,160
│    └─ReLU: 2-4                         [1, 64]                   --
│    └─Linear: 2-5                       [1, 64]                   4,160
│    └─ReLU: 2-6                         [1, 64]                   --
│    └─Linear: 2-7                       [1, 64]                   4,160
│    └─ReLU: 2-8                         [1, 64]                   --
│    └─Linear: 2-9                       [1, 64]                   4,160
│    └─ReLU: 2-10                        [1, 64]                   --
│    └─Linear: 2-11                      [1, 64]                   4,160
│    └─ReLU: 2-12                        [1, 64]                   --
│    └─Linear: 2-13                      [1, 64]                   4,160
│    └─ReLU: 2-14                        [1, 64]                   --
│    └─Linear: 2-15                      [1, 2]                    130
├─Sequential: 1-2                        [1, 2]                    (recursive)
│    └─Linear: 2-16                      [1, 64]                   (recursive)
│    └─ReLU: 2-17                        [1, 64]                   --
│    └─Linear: 2-18                      [1, 64]                   (recursive)
│    └─ReLU: 2-19                        [1, 64]                   --
│    └─Linear: 2-20                      [1, 64]                   (recursive)
│    └─ReLU: 2-21                        [1, 64]                   --
│    └─Linear: 2-22                      [1, 64]                   (recursive)
│    └─ReLU: 2-23                        [1, 64]                   --
│    └─Linear: 2-24                      [1, 64]                   (recursive)
│    └─ReLU: 2-25                        [1, 64]                   --
│    └─Linear: 2-26                      [1, 64]                   (recursive)
│    └─ReLU: 2-27                        [1, 64]                   --
│    └─Linear: 2-28                      [1, 64]                   (recursive)
│    └─ReLU: 2-29                        [1, 64]                   --
│    └─Linear: 2-30                      [1, 2]                    (recursive)
==========================================================================================
Total params: 25,420
Trainable params: 25,410
Non-trainable params: 10
Total mult-adds (Units.MEGABYTES): 0.05
==========================================================================================
Input size (MB): 0.00
Forward/backward pass size (MB): 0.01
Params size (MB): 0.10
Estimated Total Size (MB): 0.11
==========================================================================================
==> Saving initial model weights...
==> Start training...
==> Number of param_groups in optimizer: 1
Epoch: 001 | Train Loss: 0.1335316 | Grad norm: 0.004939 | Time: 4s359ms
Epoch: 001 | Test Loss: 0.1343407 | Time: 512ms
==> Save the model at epoch 001 with test loss 0.1343407
Epoch: 002 | Train Loss: 0.0341264 | Grad norm: 0.026932 | Time: 4s68ms
Epoch: 002 | Test Loss: 0.0032830 | Time: 505ms
==> Save the model at epoch 002 with test loss 0.0032830
Epoch: 003 | Train Loss: 0.0032503 | Grad norm: 0.014902 | Time: 4s83ms
Epoch: 003 | Test Loss: 0.0029829 | Time: 511ms
==> Save the model at epoch 003 with test loss 0.0029829
Epoch: 004 | Train Loss: 0.0030693 | Grad norm: 0.016544 | Time: 4s525ms
Epoch: 004 | Test Loss: 0.0028401 | Time: 525ms
==> Save the model at epoch 004 with test loss 0.0028401
Epoch: 005 | Train Loss: 0.0029280 | Grad norm: 0.016096 | Time: 4s493ms
Epoch: 005 | Test Loss: 0.0026919 | Time: 517ms
==> Save the model at epoch 005 with test loss 0.0026919
Epoch: 006 | Train Loss: 0.0027909 | Grad norm: 0.015177 | Time: 4s233ms
Epoch: 006 | Test Loss: 0.0025837 | Time: 599ms
==> Save the model at epoch 006 with test loss 0.0025837
Epoch: 007 | Train Loss: 0.0026786 | Grad norm: 0.016675 | Time: 4s318ms
Epoch: 007 | Test Loss: 0.0025371 | Time: 553ms
==> Save the model at epoch 007 with test loss 0.0025371
Epoch: 008 | Train Loss: 0.0025319 | Grad norm: 0.019060 | Time: 4s337ms
Epoch: 008 | Test Loss: 0.0023021 | Time: 507ms
==> Save the model at epoch 008 with test loss 0.0023021
Epoch: 009 | Train Loss: 0.0022398 | Grad norm: 0.030607 | Time: 4s396ms
Epoch: 009 | Test Loss: 0.0017462 | Time: 525ms
==> Save the model at epoch 009 with test loss 0.0017462
Epoch: 010 | Train Loss: 0.0015774 | Grad norm: 0.036961 | Time: 4s664ms
Epoch: 010 | Test Loss: 0.0012001 | Time: 511ms
==> Save the model at epoch 010 with test loss 0.0012001
Epoch: 011 | Train Loss: 0.0009649 | Grad norm: 0.032288 | Time: 4s520ms
Epoch: 011 | Test Loss: 0.0009749 | Time: 510ms
==> Save the model at epoch 011 with test loss 0.0009749
Epoch: 012 | Train Loss: 0.0006490 | Grad norm: 0.032361 | Time: 4s235ms
Epoch: 012 | Test Loss: 0.0005275 | Time: 508ms
==> Save the model at epoch 012 with test loss 0.0005275
Epoch: 013 | Train Loss: 0.0005152 | Grad norm: 0.033863 | Time: 4s400ms
Epoch: 013 | Test Loss: 0.0006065 | Time: 506ms
Epoch: 014 | Train Loss: 0.0004179 | Grad norm: 0.028628 | Time: 4s360ms
Epoch: 014 | Test Loss: 0.0003568 | Time: 589ms
==> Save the model at epoch 014 with test loss 0.0003568
Epoch: 015 | Train Loss: 0.0003599 | Grad norm: 0.027174 | Time: 4s607ms
Epoch: 015 | Test Loss: 0.0003660 | Time: 508ms
Epoch: 016 | Train Loss: 0.0003437 | Grad norm: 0.026563 | Time: 4s367ms
Epoch: 016 | Test Loss: 0.0002840 | Time: 508ms
==> Save the model at epoch 016 with test loss 0.0002840
Epoch: 017 | Train Loss: 0.0003200 | Grad norm: 0.026800 | Time: 4s393ms
Epoch: 017 | Test Loss: 0.0003950 | Time: 525ms
Epoch: 018 | Train Loss: 0.0002762 | Grad norm: 0.022524 | Time: 4s141ms
Epoch: 018 | Test Loss: 0.0002953 | Time: 511ms
Epoch: 019 | Train Loss: 0.0002476 | Grad norm: 0.018879 | Time: 4s198ms
Epoch: 019 | Test Loss: 0.0003189 | Time: 506ms
Epoch: 020 | Train Loss: 0.0002533 | Grad norm: 0.019173 | Time: 4s278ms
Epoch: 020 | Test Loss: 0.0002638 | Time: 522ms
==> Save the model at epoch 020 with test loss 0.0002638
Epoch: 021 | Train Loss: 0.0002415 | Grad norm: 0.019467 | Time: 4s233ms
Epoch: 021 | Test Loss: 0.0002673 | Time: 520ms
Epoch: 022 | Train Loss: 0.0002428 | Grad norm: 0.019540 | Time: 4s186ms
Epoch: 022 | Test Loss: 0.0002227 | Time: 578ms
==> Save the model at epoch 022 with test loss 0.0002227
Epoch: 023 | Train Loss: 0.0002152 | Grad norm: 0.016373 | Time: 4s291ms
Epoch: 023 | Test Loss: 0.0002290 | Time: 506ms
Epoch: 024 | Train Loss: 0.0002067 | Grad norm: 0.016475 | Time: 4s315ms
Epoch: 024 | Test Loss: 0.0001880 | Time: 524ms
==> Save the model at epoch 024 with test loss 0.0001880
Epoch: 025 | Train Loss: 0.0001986 | Grad norm: 0.014259 | Time: 4s234ms
Epoch: 025 | Test Loss: 0.0002125 | Time: 536ms
Epoch: 026 | Train Loss: 0.0001932 | Grad norm: 0.014795 | Time: 4s404ms
Epoch: 026 | Test Loss: 0.0001975 | Time: 522ms
Epoch: 027 | Train Loss: 0.0001870 | Grad norm: 0.014360 | Time: 4s549ms
Epoch: 027 | Test Loss: 0.0001894 | Time: 524ms
Epoch: 028 | Train Loss: 0.0001725 | Grad norm: 0.012289 | Time: 4s502ms
Epoch: 028 | Test Loss: 0.0001551 | Time: 521ms
==> Save the model at epoch 028 with test loss 0.0001551
Epoch: 029 | Train Loss: 0.0001674 | Grad norm: 0.012299 | Time: 4s379ms
Epoch: 029 | Test Loss: 0.0001629 | Time: 523ms
Epoch: 030 | Train Loss: 0.0001569 | Grad norm: 0.010905 | Time: 4s372ms
Epoch: 030 | Test Loss: 0.0001446 | Time: 526ms
==> Save the model at epoch 030 with test loss 0.0001446
Epoch: 031 | Train Loss: 0.0001526 | Grad norm: 0.010918 | Time: 4s185ms
Epoch: 031 | Test Loss: 0.0001454 | Time: 525ms
Epoch: 032 | Train Loss: 0.0001461 | Grad norm: 0.010256 | Time: 4s289ms
Epoch: 032 | Test Loss: 0.0001430 | Time: 523ms
==> Save the model at epoch 032 with test loss 0.0001430
Epoch: 033 | Train Loss: 0.0001410 | Grad norm: 0.009899 | Time: 4s352ms
Epoch: 033 | Test Loss: 0.0001443 | Time: 580ms
Epoch: 034 | Train Loss: 0.0001372 | Grad norm: 0.009674 | Time: 4s74ms
Epoch: 034 | Test Loss: 0.0001381 | Time: 514ms
==> Save the model at epoch 034 with test loss 0.0001381
Epoch: 035 | Train Loss: 0.0001324 | Grad norm: 0.008649 | Time: 4s473ms
Epoch: 035 | Test Loss: 0.0001345 | Time: 507ms
==> Save the model at epoch 035 with test loss 0.0001345
Epoch: 036 | Train Loss: 0.0001296 | Grad norm: 0.008483 | Time: 4s256ms
Epoch: 036 | Test Loss: 0.0001292 | Time: 519ms
==> Save the model at epoch 036 with test loss 0.0001292
Epoch: 037 | Train Loss: 0.0001266 | Grad norm: 0.007656 | Time: 4s363ms
Epoch: 037 | Test Loss: 0.0001275 | Time: 517ms
==> Save the model at epoch 037 with test loss 0.0001275
Epoch: 038 | Train Loss: 0.0001239 | Grad norm: 0.007182 | Time: 4s562ms
Epoch: 038 | Test Loss: 0.0001265 | Time: 526ms
==> Save the model at epoch 038 with test loss 0.0001265
Epoch: 039 | Train Loss: 0.0001224 | Grad norm: 0.006865 | Time: 4s269ms
Epoch: 039 | Test Loss: 0.0001264 | Time: 508ms
==> Save the model at epoch 039 with test loss 0.0001264
Epoch: 040 | Train Loss: 0.0001214 | Grad norm: 0.006673 | Time: 4s377ms
Epoch: 040 | Test Loss: 0.0001253 | Time: 537ms
==> Save the model at epoch 040 with test loss 0.0001253
Total time: 3m14s
==> Saving trained model weights...
==> Input bias to be applied to the neural network (trained):
[0. 0. 0. 0.]
==> Input transform to be applied to the neural network (trained):
[0.708416   0.723275   0.6768648  0.67421794]
==> Output transform to be applied to the neural network (trained):
[0.2262 0.2874]
==> Saving training info...
==> Drawing training loss...
==> Drawing grad norm...
==> Drawing testing loss...
==> Process finished.
