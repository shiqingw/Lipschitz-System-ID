==> torch device:  cuda:2
==> Test-Train split: test_ratio = 0.20
==> Test-Train split seed:  None
==> Further split: further_train_ratio = 1.00
==> Further split seed:  None
==> Input bias to be applied to the neural network:
[0. 0. 0. 0.]
==> Input transform to be applied to the neural network:
[0.708416   0.723275   0.6768648  0.67421794]
==> Ouput transform to be applied to the neural network:
[0.2262 0.2874]
==> Evaluating model...
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
NeuralNetwork                            [1, 2]                    10
├─Sequential: 1-1                        [1, 2]                    --
│    └─Linear: 2-1                       [1, 64]                   320
│    └─ReLU: 2-2                         [1, 64]                   --
│    └─Linear: 2-3                       [1, 64]                   4,160
│    └─ReLU: 2-4                         [1, 64]                   --
│    └─Linear: 2-5                       [1, 64]                   4,160
│    └─ReLU: 2-6                         [1, 64]                   --
│    └─Linear: 2-7                       [1, 64]                   4,160
│    └─ReLU: 2-8                         [1, 64]                   --
│    └─Linear: 2-9                       [1, 64]                   4,160
│    └─ReLU: 2-10                        [1, 64]                   --
│    └─Linear: 2-11                      [1, 64]                   4,160
│    └─ReLU: 2-12                        [1, 64]                   --
│    └─Linear: 2-13                      [1, 64]                   4,160
│    └─ReLU: 2-14                        [1, 64]                   --
│    └─Linear: 2-15                      [1, 2]                    130
├─Sequential: 1-2                        [1, 2]                    (recursive)
│    └─Linear: 2-16                      [1, 64]                   (recursive)
│    └─ReLU: 2-17                        [1, 64]                   --
│    └─Linear: 2-18                      [1, 64]                   (recursive)
│    └─ReLU: 2-19                        [1, 64]                   --
│    └─Linear: 2-20                      [1, 64]                   (recursive)
│    └─ReLU: 2-21                        [1, 64]                   --
│    └─Linear: 2-22                      [1, 64]                   (recursive)
│    └─ReLU: 2-23                        [1, 64]                   --
│    └─Linear: 2-24                      [1, 64]                   (recursive)
│    └─ReLU: 2-25                        [1, 64]                   --
│    └─Linear: 2-26                      [1, 64]                   (recursive)
│    └─ReLU: 2-27                        [1, 64]                   --
│    └─Linear: 2-28                      [1, 64]                   (recursive)
│    └─ReLU: 2-29                        [1, 64]                   --
│    └─Linear: 2-30                      [1, 2]                    (recursive)
==========================================================================================
Total params: 25,420
Trainable params: 25,410
Non-trainable params: 10
Total mult-adds (Units.MEGABYTES): 0.05
==========================================================================================
Input size (MB): 0.00
Forward/backward pass size (MB): 0.01
Params size (MB): 0.10
Estimated Total Size (MB): 0.11
==========================================================================================
==> Saving initial model weights...
==> Start training...
==> Number of param_groups in optimizer: 1
Epoch: 001 | Train Loss: 0.1337000 | Grad norm: 0.002691 | Time: 4s560ms
Epoch: 001 | Test Loss: 0.1338212 | Time: 522ms
==> Save the model at epoch 001 with test loss 0.1338212
Epoch: 002 | Train Loss: 0.0338624 | Grad norm: 0.024932 | Time: 4s370ms
Epoch: 002 | Test Loss: 0.0032121 | Time: 522ms
==> Save the model at epoch 002 with test loss 0.0032121
Epoch: 003 | Train Loss: 0.0031564 | Grad norm: 0.012017 | Time: 4s505ms
Epoch: 003 | Test Loss: 0.0027727 | Time: 497ms
==> Save the model at epoch 003 with test loss 0.0027727
Epoch: 004 | Train Loss: 0.0029192 | Grad norm: 0.012177 | Time: 4s332ms
Epoch: 004 | Test Loss: 0.0026120 | Time: 501ms
==> Save the model at epoch 004 with test loss 0.0026120
Epoch: 005 | Train Loss: 0.0027705 | Grad norm: 0.014854 | Time: 4s453ms
Epoch: 005 | Test Loss: 0.0024587 | Time: 520ms
==> Save the model at epoch 005 with test loss 0.0024587
Epoch: 006 | Train Loss: 0.0026158 | Grad norm: 0.017218 | Time: 4s335ms
Epoch: 006 | Test Loss: 0.0023762 | Time: 570ms
==> Save the model at epoch 006 with test loss 0.0023762
Epoch: 007 | Train Loss: 0.0023772 | Grad norm: 0.026336 | Time: 4s112ms
Epoch: 007 | Test Loss: 0.0020346 | Time: 505ms
==> Save the model at epoch 007 with test loss 0.0020346
Epoch: 008 | Train Loss: 0.0020407 | Grad norm: 0.040635 | Time: 4s225ms
Epoch: 008 | Test Loss: 0.0016922 | Time: 515ms
==> Save the model at epoch 008 with test loss 0.0016922
Epoch: 009 | Train Loss: 0.0016830 | Grad norm: 0.045003 | Time: 4s267ms
Epoch: 009 | Test Loss: 0.0013741 | Time: 506ms
==> Save the model at epoch 009 with test loss 0.0013741
Epoch: 010 | Train Loss: 0.0011645 | Grad norm: 0.034321 | Time: 4s505ms
Epoch: 010 | Test Loss: 0.0009852 | Time: 505ms
==> Save the model at epoch 010 with test loss 0.0009852
Epoch: 011 | Train Loss: 0.0008981 | Grad norm: 0.035920 | Time: 4s208ms
Epoch: 011 | Test Loss: 0.0007471 | Time: 505ms
==> Save the model at epoch 011 with test loss 0.0007471
Epoch: 012 | Train Loss: 0.0007293 | Grad norm: 0.038168 | Time: 4s154ms
Epoch: 012 | Test Loss: 0.0007263 | Time: 514ms
==> Save the model at epoch 012 with test loss 0.0007263
Epoch: 013 | Train Loss: 0.0005646 | Grad norm: 0.035843 | Time: 4s229ms
Epoch: 013 | Test Loss: 0.0004830 | Time: 516ms
==> Save the model at epoch 013 with test loss 0.0004830
Epoch: 014 | Train Loss: 0.0004968 | Grad norm: 0.037877 | Time: 4s242ms
Epoch: 014 | Test Loss: 0.0004450 | Time: 578ms
==> Save the model at epoch 014 with test loss 0.0004450
Epoch: 015 | Train Loss: 0.0004231 | Grad norm: 0.032498 | Time: 4s272ms
Epoch: 015 | Test Loss: 0.0004037 | Time: 517ms
==> Save the model at epoch 015 with test loss 0.0004037
Epoch: 016 | Train Loss: 0.0003776 | Grad norm: 0.029721 | Time: 4s170ms
Epoch: 016 | Test Loss: 0.0003304 | Time: 502ms
==> Save the model at epoch 016 with test loss 0.0003304
Epoch: 017 | Train Loss: 0.0003396 | Grad norm: 0.027056 | Time: 4s127ms
Epoch: 017 | Test Loss: 0.0003678 | Time: 501ms
Epoch: 018 | Train Loss: 0.0003159 | Grad norm: 0.026549 | Time: 4s486ms
Epoch: 018 | Test Loss: 0.0002858 | Time: 571ms
==> Save the model at epoch 018 with test loss 0.0002858
Epoch: 019 | Train Loss: 0.0002886 | Grad norm: 0.023065 | Time: 4s70ms
Epoch: 019 | Test Loss: 0.0003041 | Time: 519ms
Epoch: 020 | Train Loss: 0.0002871 | Grad norm: 0.024581 | Time: 4s96ms
Epoch: 020 | Test Loss: 0.0002526 | Time: 529ms
==> Save the model at epoch 020 with test loss 0.0002526
Epoch: 021 | Train Loss: 0.0002737 | Grad norm: 0.024167 | Time: 4s288ms
Epoch: 021 | Test Loss: 0.0003349 | Time: 507ms
Epoch: 022 | Train Loss: 0.0002586 | Grad norm: 0.022621 | Time: 4s314ms
Epoch: 022 | Test Loss: 0.0002585 | Time: 579ms
Epoch: 023 | Train Loss: 0.0002415 | Grad norm: 0.020322 | Time: 4s258ms
Epoch: 023 | Test Loss: 0.0002020 | Time: 518ms
==> Save the model at epoch 023 with test loss 0.0002020
Epoch: 024 | Train Loss: 0.0002321 | Grad norm: 0.019396 | Time: 4s296ms
Epoch: 024 | Test Loss: 0.0002000 | Time: 504ms
==> Save the model at epoch 024 with test loss 0.0002000
Epoch: 025 | Train Loss: 0.0002237 | Grad norm: 0.018236 | Time: 4s131ms
Epoch: 025 | Test Loss: 0.0002232 | Time: 517ms
Epoch: 026 | Train Loss: 0.0002131 | Grad norm: 0.018588 | Time: 4s279ms
Epoch: 026 | Test Loss: 0.0002139 | Time: 501ms
Epoch: 027 | Train Loss: 0.0002004 | Grad norm: 0.015632 | Time: 4s265ms
Epoch: 027 | Test Loss: 0.0001892 | Time: 504ms
==> Save the model at epoch 027 with test loss 0.0001892
Epoch: 028 | Train Loss: 0.0001957 | Grad norm: 0.016182 | Time: 4s133ms
Epoch: 028 | Test Loss: 0.0002014 | Time: 523ms
Epoch: 029 | Train Loss: 0.0001878 | Grad norm: 0.015249 | Time: 4s349ms
Epoch: 029 | Test Loss: 0.0001696 | Time: 506ms
==> Save the model at epoch 029 with test loss 0.0001696
Epoch: 030 | Train Loss: 0.0001793 | Grad norm: 0.014257 | Time: 3s903ms
Epoch: 030 | Test Loss: 0.0001697 | Time: 502ms
Epoch: 031 | Train Loss: 0.0001710 | Grad norm: 0.013628 | Time: 4s305ms
Epoch: 031 | Test Loss: 0.0001626 | Time: 502ms
==> Save the model at epoch 031 with test loss 0.0001626
Epoch: 032 | Train Loss: 0.0001664 | Grad norm: 0.013363 | Time: 4s383ms
Epoch: 032 | Test Loss: 0.0001693 | Time: 511ms
Epoch: 033 | Train Loss: 0.0001600 | Grad norm: 0.012143 | Time: 4s279ms
Epoch: 033 | Test Loss: 0.0001561 | Time: 583ms
==> Save the model at epoch 033 with test loss 0.0001561
Epoch: 034 | Train Loss: 0.0001549 | Grad norm: 0.010996 | Time: 4s313ms
Epoch: 034 | Test Loss: 0.0001562 | Time: 522ms
Epoch: 035 | Train Loss: 0.0001494 | Grad norm: 0.010448 | Time: 4s293ms
Epoch: 035 | Test Loss: 0.0001462 | Time: 634ms
==> Save the model at epoch 035 with test loss 0.0001462
Epoch: 036 | Train Loss: 0.0001457 | Grad norm: 0.009921 | Time: 4s237ms
Epoch: 036 | Test Loss: 0.0001469 | Time: 500ms
Epoch: 037 | Train Loss: 0.0001423 | Grad norm: 0.009124 | Time: 4s304ms
Epoch: 037 | Test Loss: 0.0001402 | Time: 513ms
==> Save the model at epoch 037 with test loss 0.0001402
Epoch: 038 | Train Loss: 0.0001397 | Grad norm: 0.008626 | Time: 4s237ms
Epoch: 038 | Test Loss: 0.0001429 | Time: 498ms
Epoch: 039 | Train Loss: 0.0001381 | Grad norm: 0.008079 | Time: 4s177ms
Epoch: 039 | Test Loss: 0.0001389 | Time: 504ms
==> Save the model at epoch 039 with test loss 0.0001389
Epoch: 040 | Train Loss: 0.0001369 | Grad norm: 0.007745 | Time: 4s716ms
Epoch: 040 | Test Loss: 0.0001385 | Time: 504ms
==> Save the model at epoch 040 with test loss 0.0001385
Total time: 3m12s
==> Saving trained model weights...
==> Input bias to be applied to the neural network (trained):
[0. 0. 0. 0.]
==> Input transform to be applied to the neural network (trained):
[0.708416   0.723275   0.6768648  0.67421794]
==> Output transform to be applied to the neural network (trained):
[0.2262 0.2874]
==> Saving training info...
==> Drawing training loss...
==> Drawing grad norm...
==> Drawing testing loss...
==> Process finished.
