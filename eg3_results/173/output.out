==> torch device:  cuda:0
==> Test-Train split: test_ratio = 0.20
==> Test-Train split seed:  None
==> Further split: further_train_ratio = 1.00
==> Further split seed:  None
==> Input bias to be applied to the neural network:
[0. 0. 0. 0.]
==> Input transform to be applied to the neural network:
[0.708416   0.723275   0.67681897 0.67421794]
==> Ouput transform to be applied to the neural network:
[0.2339 0.2936]
==> Evaluating model...
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
NeuralNetwork                            [1, 2]                    10
├─Sequential: 1-1                        [1, 2]                    --
│    └─Linear: 2-1                       [1, 64]                   320
│    └─ReLU: 2-2                         [1, 64]                   --
│    └─Linear: 2-3                       [1, 64]                   4,160
│    └─ReLU: 2-4                         [1, 64]                   --
│    └─Linear: 2-5                       [1, 64]                   4,160
│    └─ReLU: 2-6                         [1, 64]                   --
│    └─Linear: 2-7                       [1, 64]                   4,160
│    └─ReLU: 2-8                         [1, 64]                   --
│    └─Linear: 2-9                       [1, 64]                   4,160
│    └─ReLU: 2-10                        [1, 64]                   --
│    └─Linear: 2-11                      [1, 64]                   4,160
│    └─ReLU: 2-12                        [1, 64]                   --
│    └─Linear: 2-13                      [1, 64]                   4,160
│    └─ReLU: 2-14                        [1, 64]                   --
│    └─Linear: 2-15                      [1, 2]                    130
├─Sequential: 1-2                        [1, 2]                    (recursive)
│    └─Linear: 2-16                      [1, 64]                   (recursive)
│    └─ReLU: 2-17                        [1, 64]                   --
│    └─Linear: 2-18                      [1, 64]                   (recursive)
│    └─ReLU: 2-19                        [1, 64]                   --
│    └─Linear: 2-20                      [1, 64]                   (recursive)
│    └─ReLU: 2-21                        [1, 64]                   --
│    └─Linear: 2-22                      [1, 64]                   (recursive)
│    └─ReLU: 2-23                        [1, 64]                   --
│    └─Linear: 2-24                      [1, 64]                   (recursive)
│    └─ReLU: 2-25                        [1, 64]                   --
│    └─Linear: 2-26                      [1, 64]                   (recursive)
│    └─ReLU: 2-27                        [1, 64]                   --
│    └─Linear: 2-28                      [1, 64]                   (recursive)
│    └─ReLU: 2-29                        [1, 64]                   --
│    └─Linear: 2-30                      [1, 2]                    (recursive)
==========================================================================================
Total params: 25,420
Trainable params: 25,410
Non-trainable params: 10
Total mult-adds (Units.MEGABYTES): 0.05
==========================================================================================
Input size (MB): 0.00
Forward/backward pass size (MB): 0.01
Params size (MB): 0.10
Estimated Total Size (MB): 0.11
==========================================================================================
==> Saving initial model weights...
==> Start training...
==> Number of param_groups in optimizer: 1
Epoch: 001 | Train Loss: 0.1408119 | Grad norm: 0.004193 | Time: 4s521ms
Epoch: 001 | Test Loss: 0.1413165 | Time: 531ms
==> Save the model at epoch 001 with test loss 0.1413165
Epoch: 002 | Train Loss: 0.0407575 | Grad norm: 0.034933 | Time: 4s422ms
Epoch: 002 | Test Loss: 0.0110692 | Time: 511ms
==> Save the model at epoch 002 with test loss 0.0110692
Epoch: 003 | Train Loss: 0.0103560 | Grad norm: 0.033236 | Time: 4s384ms
Epoch: 003 | Test Loss: 0.0108929 | Time: 519ms
==> Save the model at epoch 003 with test loss 0.0108929
Epoch: 004 | Train Loss: 0.0102204 | Grad norm: 0.029837 | Time: 4s152ms
Epoch: 004 | Test Loss: 0.0109031 | Time: 504ms
Epoch: 005 | Train Loss: 0.0101686 | Grad norm: 0.029232 | Time: 4s392ms
Epoch: 005 | Test Loss: 0.0107588 | Time: 508ms
==> Save the model at epoch 005 with test loss 0.0107588
Epoch: 006 | Train Loss: 0.0100784 | Grad norm: 0.026721 | Time: 4s304ms
Epoch: 006 | Test Loss: 0.0106929 | Time: 572ms
==> Save the model at epoch 006 with test loss 0.0106929
Epoch: 007 | Train Loss: 0.0100140 | Grad norm: 0.025695 | Time: 4s86ms
Epoch: 007 | Test Loss: 0.0106758 | Time: 500ms
==> Save the model at epoch 007 with test loss 0.0106758
Epoch: 008 | Train Loss: 0.0099549 | Grad norm: 0.025140 | Time: 4s392ms
Epoch: 008 | Test Loss: 0.0106594 | Time: 507ms
==> Save the model at epoch 008 with test loss 0.0106594
Epoch: 009 | Train Loss: 0.0099096 | Grad norm: 0.025342 | Time: 4s301ms
Epoch: 009 | Test Loss: 0.0104444 | Time: 547ms
==> Save the model at epoch 009 with test loss 0.0104444
Epoch: 010 | Train Loss: 0.0097938 | Grad norm: 0.023610 | Time: 4s241ms
Epoch: 010 | Test Loss: 0.0104766 | Time: 503ms
Epoch: 011 | Train Loss: 0.0097268 | Grad norm: 0.024248 | Time: 4s521ms
Epoch: 011 | Test Loss: 0.0102771 | Time: 502ms
==> Save the model at epoch 011 with test loss 0.0102771
Epoch: 012 | Train Loss: 0.0095955 | Grad norm: 0.024564 | Time: 4s365ms
Epoch: 012 | Test Loss: 0.0101088 | Time: 525ms
==> Save the model at epoch 012 with test loss 0.0101088
Epoch: 013 | Train Loss: 0.0094333 | Grad norm: 0.026000 | Time: 4s391ms
Epoch: 013 | Test Loss: 0.0102363 | Time: 508ms
Epoch: 014 | Train Loss: 0.0092301 | Grad norm: 0.028772 | Time: 4s545ms
Epoch: 014 | Test Loss: 0.0096362 | Time: 580ms
==> Save the model at epoch 014 with test loss 0.0096362
Epoch: 015 | Train Loss: 0.0090088 | Grad norm: 0.030527 | Time: 4s220ms
Epoch: 015 | Test Loss: 0.0095801 | Time: 520ms
==> Save the model at epoch 015 with test loss 0.0095801
Epoch: 016 | Train Loss: 0.0087525 | Grad norm: 0.031740 | Time: 4s223ms
Epoch: 016 | Test Loss: 0.0091009 | Time: 503ms
==> Save the model at epoch 016 with test loss 0.0091009
Epoch: 017 | Train Loss: 0.0085546 | Grad norm: 0.035683 | Time: 4s315ms
Epoch: 017 | Test Loss: 0.0088666 | Time: 505ms
==> Save the model at epoch 017 with test loss 0.0088666
Epoch: 018 | Train Loss: 0.0083994 | Grad norm: 0.038403 | Time: 4s423ms
Epoch: 018 | Test Loss: 0.0085415 | Time: 506ms
==> Save the model at epoch 018 with test loss 0.0085415
Epoch: 019 | Train Loss: 0.0082161 | Grad norm: 0.039177 | Time: 4s229ms
Epoch: 019 | Test Loss: 0.0085161 | Time: 524ms
==> Save the model at epoch 019 with test loss 0.0085161
Epoch: 020 | Train Loss: 0.0080726 | Grad norm: 0.038238 | Time: 4s33ms
Epoch: 020 | Test Loss: 0.0083807 | Time: 505ms
==> Save the model at epoch 020 with test loss 0.0083807
Epoch: 021 | Train Loss: 0.0079639 | Grad norm: 0.041962 | Time: 4s220ms
Epoch: 021 | Test Loss: 0.0081189 | Time: 510ms
==> Save the model at epoch 021 with test loss 0.0081189
Epoch: 022 | Train Loss: 0.0078831 | Grad norm: 0.041841 | Time: 4s108ms
Epoch: 022 | Test Loss: 0.0082226 | Time: 576ms
Epoch: 023 | Train Loss: 0.0077720 | Grad norm: 0.040761 | Time: 4s132ms
Epoch: 023 | Test Loss: 0.0082926 | Time: 504ms
Epoch: 024 | Train Loss: 0.0077081 | Grad norm: 0.041309 | Time: 4s476ms
Epoch: 024 | Test Loss: 0.0079801 | Time: 506ms
==> Save the model at epoch 024 with test loss 0.0079801
Epoch: 025 | Train Loss: 0.0076615 | Grad norm: 0.041743 | Time: 4s221ms
Epoch: 025 | Test Loss: 0.0078483 | Time: 539ms
==> Save the model at epoch 025 with test loss 0.0078483
Epoch: 026 | Train Loss: 0.0075764 | Grad norm: 0.040250 | Time: 4s380ms
Epoch: 026 | Test Loss: 0.0079646 | Time: 506ms
Epoch: 027 | Train Loss: 0.0075283 | Grad norm: 0.040832 | Time: 4s359ms
Epoch: 027 | Test Loss: 0.0077807 | Time: 507ms
==> Save the model at epoch 027 with test loss 0.0077807
Epoch: 028 | Train Loss: 0.0074967 | Grad norm: 0.041795 | Time: 4s317ms
Epoch: 028 | Test Loss: 0.0079098 | Time: 509ms
Epoch: 029 | Train Loss: 0.0074555 | Grad norm: 0.042385 | Time: 4s428ms
Epoch: 029 | Test Loss: 0.0078181 | Time: 506ms
Epoch: 030 | Train Loss: 0.0074087 | Grad norm: 0.040844 | Time: 4s358ms
Epoch: 030 | Test Loss: 0.0077391 | Time: 510ms
==> Save the model at epoch 030 with test loss 0.0077391
Epoch: 031 | Train Loss: 0.0073670 | Grad norm: 0.041124 | Time: 4s269ms
Epoch: 031 | Test Loss: 0.0077652 | Time: 517ms
Epoch: 032 | Train Loss: 0.0073322 | Grad norm: 0.040789 | Time: 4s412ms
Epoch: 032 | Test Loss: 0.0076269 | Time: 503ms
==> Save the model at epoch 032 with test loss 0.0076269
Epoch: 033 | Train Loss: 0.0072977 | Grad norm: 0.041143 | Time: 4s328ms
Epoch: 033 | Test Loss: 0.0076539 | Time: 579ms
Epoch: 034 | Train Loss: 0.0072736 | Grad norm: 0.040394 | Time: 4s375ms
Epoch: 034 | Test Loss: 0.0075503 | Time: 516ms
==> Save the model at epoch 034 with test loss 0.0075503
Epoch: 035 | Train Loss: 0.0072393 | Grad norm: 0.039033 | Time: 4s103ms
Epoch: 035 | Test Loss: 0.0075239 | Time: 517ms
==> Save the model at epoch 035 with test loss 0.0075239
Epoch: 036 | Train Loss: 0.0072241 | Grad norm: 0.038479 | Time: 4s238ms
Epoch: 036 | Test Loss: 0.0075372 | Time: 502ms
Epoch: 037 | Train Loss: 0.0072058 | Grad norm: 0.038770 | Time: 4s335ms
Epoch: 037 | Test Loss: 0.0075262 | Time: 516ms
Epoch: 038 | Train Loss: 0.0071909 | Grad norm: 0.038435 | Time: 4s257ms
Epoch: 038 | Test Loss: 0.0075165 | Time: 541ms
==> Save the model at epoch 038 with test loss 0.0075165
Epoch: 039 | Train Loss: 0.0071790 | Grad norm: 0.038609 | Time: 4s131ms
Epoch: 039 | Test Loss: 0.0075140 | Time: 515ms
==> Save the model at epoch 039 with test loss 0.0075140
Epoch: 040 | Train Loss: 0.0071730 | Grad norm: 0.037553 | Time: 4s183ms
Epoch: 040 | Test Loss: 0.0075070 | Time: 515ms
==> Save the model at epoch 040 with test loss 0.0075070
Total time: 3m12s
==> Saving trained model weights...
==> Input bias to be applied to the neural network (trained):
[0. 0. 0. 0.]
==> Input transform to be applied to the neural network (trained):
[0.708416   0.723275   0.67681897 0.67421794]
==> Output transform to be applied to the neural network (trained):
[0.2339 0.2936]
==> Saving training info...
==> Drawing training loss...
==> Drawing grad norm...
==> Drawing testing loss...
==> Process finished.
