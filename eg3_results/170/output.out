==> torch device:  cuda:1
==> Test-Train split: test_ratio = 0.20
==> Test-Train split seed:  None
==> Further split: further_train_ratio = 1.00
==> Further split seed:  None
==> Input bias to be applied to the neural network:
[0. 0. 0. 0.]
==> Input transform to be applied to the neural network:
[0.708416   0.723275   0.67681897 0.67421794]
==> Ouput transform to be applied to the neural network:
[0.2339 0.2936]
==> Evaluating model...
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
NeuralNetwork                            [1, 2]                    10
├─Sequential: 1-1                        [1, 2]                    --
│    └─Linear: 2-1                       [1, 64]                   320
│    └─ReLU: 2-2                         [1, 64]                   --
│    └─Linear: 2-3                       [1, 64]                   4,160
│    └─ReLU: 2-4                         [1, 64]                   --
│    └─Linear: 2-5                       [1, 64]                   4,160
│    └─ReLU: 2-6                         [1, 64]                   --
│    └─Linear: 2-7                       [1, 64]                   4,160
│    └─ReLU: 2-8                         [1, 64]                   --
│    └─Linear: 2-9                       [1, 64]                   4,160
│    └─ReLU: 2-10                        [1, 64]                   --
│    └─Linear: 2-11                      [1, 64]                   4,160
│    └─ReLU: 2-12                        [1, 64]                   --
│    └─Linear: 2-13                      [1, 64]                   4,160
│    └─ReLU: 2-14                        [1, 64]                   --
│    └─Linear: 2-15                      [1, 2]                    130
├─Sequential: 1-2                        [1, 2]                    (recursive)
│    └─Linear: 2-16                      [1, 64]                   (recursive)
│    └─ReLU: 2-17                        [1, 64]                   --
│    └─Linear: 2-18                      [1, 64]                   (recursive)
│    └─ReLU: 2-19                        [1, 64]                   --
│    └─Linear: 2-20                      [1, 64]                   (recursive)
│    └─ReLU: 2-21                        [1, 64]                   --
│    └─Linear: 2-22                      [1, 64]                   (recursive)
│    └─ReLU: 2-23                        [1, 64]                   --
│    └─Linear: 2-24                      [1, 64]                   (recursive)
│    └─ReLU: 2-25                        [1, 64]                   --
│    └─Linear: 2-26                      [1, 64]                   (recursive)
│    └─ReLU: 2-27                        [1, 64]                   --
│    └─Linear: 2-28                      [1, 64]                   (recursive)
│    └─ReLU: 2-29                        [1, 64]                   --
│    └─Linear: 2-30                      [1, 2]                    (recursive)
==========================================================================================
Total params: 25,420
Trainable params: 25,410
Non-trainable params: 10
Total mult-adds (Units.MEGABYTES): 0.05
==========================================================================================
Input size (MB): 0.00
Forward/backward pass size (MB): 0.01
Params size (MB): 0.10
Estimated Total Size (MB): 0.11
==========================================================================================
==> Saving initial model weights...
==> Start training...
==> Number of param_groups in optimizer: 1
Epoch: 001 | Train Loss: 0.1406496 | Grad norm: 0.005062 | Time: 4s584ms
Epoch: 001 | Test Loss: 0.1415638 | Time: 504ms
==> Save the model at epoch 001 with test loss 0.1415638
Epoch: 002 | Train Loss: 0.0414992 | Grad norm: 0.034100 | Time: 4s491ms
Epoch: 002 | Test Loss: 0.0105855 | Time: 511ms
==> Save the model at epoch 002 with test loss 0.0105855
Epoch: 003 | Train Loss: 0.0105208 | Grad norm: 0.027881 | Time: 4s322ms
Epoch: 003 | Test Loss: 0.0102826 | Time: 505ms
==> Save the model at epoch 003 with test loss 0.0102826
Epoch: 004 | Train Loss: 0.0103779 | Grad norm: 0.026957 | Time: 4s273ms
Epoch: 004 | Test Loss: 0.0102496 | Time: 514ms
==> Save the model at epoch 004 with test loss 0.0102496
Epoch: 005 | Train Loss: 0.0102977 | Grad norm: 0.027683 | Time: 4s326ms
Epoch: 005 | Test Loss: 0.0101818 | Time: 507ms
==> Save the model at epoch 005 with test loss 0.0101818
Epoch: 006 | Train Loss: 0.0102293 | Grad norm: 0.026684 | Time: 4s329ms
Epoch: 006 | Test Loss: 0.0101529 | Time: 680ms
==> Save the model at epoch 006 with test loss 0.0101529
Epoch: 007 | Train Loss: 0.0101393 | Grad norm: 0.025614 | Time: 4s357ms
Epoch: 007 | Test Loss: 0.0100015 | Time: 507ms
==> Save the model at epoch 007 with test loss 0.0100015
Epoch: 008 | Train Loss: 0.0100990 | Grad norm: 0.026587 | Time: 4s257ms
Epoch: 008 | Test Loss: 0.0101426 | Time: 517ms
Epoch: 009 | Train Loss: 0.0100590 | Grad norm: 0.026518 | Time: 4s276ms
Epoch: 009 | Test Loss: 0.0098084 | Time: 503ms
==> Save the model at epoch 009 with test loss 0.0098084
Epoch: 010 | Train Loss: 0.0099697 | Grad norm: 0.026046 | Time: 4s348ms
Epoch: 010 | Test Loss: 0.0097010 | Time: 510ms
==> Save the model at epoch 010 with test loss 0.0097010
Epoch: 011 | Train Loss: 0.0098948 | Grad norm: 0.026529 | Time: 4s343ms
Epoch: 011 | Test Loss: 0.0097104 | Time: 508ms
Epoch: 012 | Train Loss: 0.0097884 | Grad norm: 0.026447 | Time: 4s482ms
Epoch: 012 | Test Loss: 0.0097260 | Time: 514ms
Epoch: 013 | Train Loss: 0.0095713 | Grad norm: 0.029876 | Time: 4s335ms
Epoch: 013 | Test Loss: 0.0093304 | Time: 506ms
==> Save the model at epoch 013 with test loss 0.0093304
Epoch: 014 | Train Loss: 0.0092033 | Grad norm: 0.036032 | Time: 4s253ms
Epoch: 014 | Test Loss: 0.0090878 | Time: 573ms
==> Save the model at epoch 014 with test loss 0.0090878
Epoch: 015 | Train Loss: 0.0087565 | Grad norm: 0.036541 | Time: 4s113ms
Epoch: 015 | Test Loss: 0.0084754 | Time: 523ms
==> Save the model at epoch 015 with test loss 0.0084754
Epoch: 016 | Train Loss: 0.0085002 | Grad norm: 0.038991 | Time: 4s375ms
Epoch: 016 | Test Loss: 0.0083533 | Time: 511ms
==> Save the model at epoch 016 with test loss 0.0083533
Epoch: 017 | Train Loss: 0.0082463 | Grad norm: 0.038100 | Time: 4s313ms
Epoch: 017 | Test Loss: 0.0079938 | Time: 514ms
==> Save the model at epoch 017 with test loss 0.0079938
Epoch: 018 | Train Loss: 0.0080650 | Grad norm: 0.037497 | Time: 4s454ms
Epoch: 018 | Test Loss: 0.0080321 | Time: 511ms
Epoch: 019 | Train Loss: 0.0079579 | Grad norm: 0.038392 | Time: 4s135ms
Epoch: 019 | Test Loss: 0.0081725 | Time: 515ms
Epoch: 020 | Train Loss: 0.0079193 | Grad norm: 0.037955 | Time: 4s76ms
Epoch: 020 | Test Loss: 0.0078783 | Time: 510ms
==> Save the model at epoch 020 with test loss 0.0078783
Epoch: 021 | Train Loss: 0.0078400 | Grad norm: 0.036883 | Time: 4s301ms
Epoch: 021 | Test Loss: 0.0079339 | Time: 505ms
Epoch: 022 | Train Loss: 0.0077531 | Grad norm: 0.036514 | Time: 4s281ms
Epoch: 022 | Test Loss: 0.0077486 | Time: 575ms
==> Save the model at epoch 022 with test loss 0.0077486
Epoch: 023 | Train Loss: 0.0077262 | Grad norm: 0.035584 | Time: 4s303ms
Epoch: 023 | Test Loss: 0.0077008 | Time: 505ms
==> Save the model at epoch 023 with test loss 0.0077008
Epoch: 024 | Train Loss: 0.0076488 | Grad norm: 0.034634 | Time: 4s484ms
Epoch: 024 | Test Loss: 0.0076920 | Time: 508ms
==> Save the model at epoch 024 with test loss 0.0076920
Epoch: 025 | Train Loss: 0.0076097 | Grad norm: 0.034371 | Time: 4s207ms
Epoch: 025 | Test Loss: 0.0077107 | Time: 510ms
Epoch: 026 | Train Loss: 0.0075546 | Grad norm: 0.034135 | Time: 4s230ms
Epoch: 026 | Test Loss: 0.0074977 | Time: 512ms
==> Save the model at epoch 026 with test loss 0.0074977
Epoch: 027 | Train Loss: 0.0075020 | Grad norm: 0.033997 | Time: 4s619ms
Epoch: 027 | Test Loss: 0.0074638 | Time: 512ms
==> Save the model at epoch 027 with test loss 0.0074638
Epoch: 028 | Train Loss: 0.0074903 | Grad norm: 0.034121 | Time: 4s403ms
Epoch: 028 | Test Loss: 0.0075199 | Time: 518ms
Epoch: 029 | Train Loss: 0.0074385 | Grad norm: 0.033220 | Time: 4s265ms
Epoch: 029 | Test Loss: 0.0074926 | Time: 526ms
Epoch: 030 | Train Loss: 0.0074004 | Grad norm: 0.032972 | Time: 4s363ms
Epoch: 030 | Test Loss: 0.0073896 | Time: 520ms
==> Save the model at epoch 030 with test loss 0.0073896
Epoch: 031 | Train Loss: 0.0073648 | Grad norm: 0.033107 | Time: 4s166ms
Epoch: 031 | Test Loss: 0.0074108 | Time: 520ms
Epoch: 032 | Train Loss: 0.0073365 | Grad norm: 0.032271 | Time: 4s208ms
Epoch: 032 | Test Loss: 0.0073192 | Time: 510ms
==> Save the model at epoch 032 with test loss 0.0073192
Epoch: 033 | Train Loss: 0.0072950 | Grad norm: 0.032220 | Time: 4s234ms
Epoch: 033 | Test Loss: 0.0073349 | Time: 581ms
Epoch: 034 | Train Loss: 0.0072791 | Grad norm: 0.032245 | Time: 4s106ms
Epoch: 034 | Test Loss: 0.0072826 | Time: 513ms
==> Save the model at epoch 034 with test loss 0.0072826
Epoch: 035 | Train Loss: 0.0072456 | Grad norm: 0.031669 | Time: 4s481ms
Epoch: 035 | Test Loss: 0.0072930 | Time: 509ms
Epoch: 036 | Train Loss: 0.0072272 | Grad norm: 0.031287 | Time: 4s435ms
Epoch: 036 | Test Loss: 0.0072565 | Time: 531ms
==> Save the model at epoch 036 with test loss 0.0072565
Epoch: 037 | Train Loss: 0.0072079 | Grad norm: 0.031118 | Time: 4s237ms
Epoch: 037 | Test Loss: 0.0072497 | Time: 508ms
==> Save the model at epoch 037 with test loss 0.0072497
Epoch: 038 | Train Loss: 0.0071943 | Grad norm: 0.031470 | Time: 4s238ms
Epoch: 038 | Test Loss: 0.0072466 | Time: 508ms
==> Save the model at epoch 038 with test loss 0.0072466
Epoch: 039 | Train Loss: 0.0071821 | Grad norm: 0.030571 | Time: 4s364ms
Epoch: 039 | Test Loss: 0.0072432 | Time: 513ms
==> Save the model at epoch 039 with test loss 0.0072432
Epoch: 040 | Train Loss: 0.0071749 | Grad norm: 0.030630 | Time: 4s272ms
Epoch: 040 | Test Loss: 0.0072436 | Time: 505ms
Total time: 3m13s
==> Saving trained model weights...
==> Input bias to be applied to the neural network (trained):
[0. 0. 0. 0.]
==> Input transform to be applied to the neural network (trained):
[0.708416   0.723275   0.67681897 0.67421794]
==> Output transform to be applied to the neural network (trained):
[0.2339 0.2936]
==> Saving training info...
==> Drawing training loss...
==> Drawing grad norm...
==> Drawing testing loss...
==> Process finished.
