==> torch device:  cuda:0
==> Test-Train split: test_ratio = 0.20
==> Test-Train split seed:  None
==> Further split: further_train_ratio = 1.00
==> Further split seed:  None
==> Input bias to be applied to the neural network:
[0. 0. 0. 0.]
==> Input transform to be applied to the neural network:
[0.7072636  0.72212595 0.6760411  0.67349136]
==> Ouput transform to be applied to the neural network:
[0.2287 0.2871]
==> Evaluating model...
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
NeuralNetwork                            [1, 2]                    10
├─Sequential: 1-1                        [1, 2]                    --
│    └─Linear: 2-1                       [1, 64]                   320
│    └─ReLU: 2-2                         [1, 64]                   --
│    └─Linear: 2-3                       [1, 64]                   4,160
│    └─ReLU: 2-4                         [1, 64]                   --
│    └─Linear: 2-5                       [1, 64]                   4,160
│    └─ReLU: 2-6                         [1, 64]                   --
│    └─Linear: 2-7                       [1, 64]                   4,160
│    └─ReLU: 2-8                         [1, 64]                   --
│    └─Linear: 2-9                       [1, 64]                   4,160
│    └─ReLU: 2-10                        [1, 64]                   --
│    └─Linear: 2-11                      [1, 64]                   4,160
│    └─ReLU: 2-12                        [1, 64]                   --
│    └─Linear: 2-13                      [1, 64]                   4,160
│    └─ReLU: 2-14                        [1, 64]                   --
│    └─Linear: 2-15                      [1, 2]                    130
├─Sequential: 1-2                        [1, 2]                    (recursive)
│    └─Linear: 2-16                      [1, 64]                   (recursive)
│    └─ReLU: 2-17                        [1, 64]                   --
│    └─Linear: 2-18                      [1, 64]                   (recursive)
│    └─ReLU: 2-19                        [1, 64]                   --
│    └─Linear: 2-20                      [1, 64]                   (recursive)
│    └─ReLU: 2-21                        [1, 64]                   --
│    └─Linear: 2-22                      [1, 64]                   (recursive)
│    └─ReLU: 2-23                        [1, 64]                   --
│    └─Linear: 2-24                      [1, 64]                   (recursive)
│    └─ReLU: 2-25                        [1, 64]                   --
│    └─Linear: 2-26                      [1, 64]                   (recursive)
│    └─ReLU: 2-27                        [1, 64]                   --
│    └─Linear: 2-28                      [1, 64]                   (recursive)
│    └─ReLU: 2-29                        [1, 64]                   --
│    └─Linear: 2-30                      [1, 2]                    (recursive)
==========================================================================================
Total params: 25,420
Trainable params: 25,410
Non-trainable params: 10
Total mult-adds (Units.MEGABYTES): 0.05
==========================================================================================
Input size (MB): 0.00
Forward/backward pass size (MB): 0.01
Params size (MB): 0.10
Estimated Total Size (MB): 0.11
==========================================================================================
==> Saving initial model weights...
==> Start training...
==> Number of param_groups in optimizer: 1
Epoch: 001 | Train Loss: 0.1346175 | Grad norm: 0.003971 | Time: 4s333ms
Epoch: 001 | Test Loss: 0.1351060 | Time: 501ms
==> Save the model at epoch 001 with test loss 0.1351060
Epoch: 002 | Train Loss: 0.0157292 | Grad norm: 0.039808 | Time: 4s394ms
Epoch: 002 | Test Loss: 0.0107745 | Time: 511ms
==> Save the model at epoch 002 with test loss 0.0107745
Epoch: 003 | Train Loss: 0.0102772 | Grad norm: 0.029487 | Time: 4s455ms
Epoch: 003 | Test Loss: 0.0108598 | Time: 513ms
Epoch: 004 | Train Loss: 0.0102091 | Grad norm: 0.031683 | Time: 4s78ms
Epoch: 004 | Test Loss: 0.0107191 | Time: 499ms
==> Save the model at epoch 004 with test loss 0.0107191
Epoch: 005 | Train Loss: 0.0100003 | Grad norm: 0.030404 | Time: 4s296ms
Epoch: 005 | Test Loss: 0.0103306 | Time: 517ms
==> Save the model at epoch 005 with test loss 0.0103306
Epoch: 006 | Train Loss: 0.0098665 | Grad norm: 0.032545 | Time: 4s252ms
Epoch: 006 | Test Loss: 0.0100170 | Time: 586ms
==> Save the model at epoch 006 with test loss 0.0100170
Epoch: 007 | Train Loss: 0.0095422 | Grad norm: 0.034644 | Time: 4s254ms
Epoch: 007 | Test Loss: 0.0092979 | Time: 562ms
==> Save the model at epoch 007 with test loss 0.0092979
Epoch: 008 | Train Loss: 0.0091451 | Grad norm: 0.034212 | Time: 4s170ms
Epoch: 008 | Test Loss: 0.0091140 | Time: 596ms
==> Save the model at epoch 008 with test loss 0.0091140
Epoch: 009 | Train Loss: 0.0088764 | Grad norm: 0.035254 | Time: 4s345ms
Epoch: 009 | Test Loss: 0.0093683 | Time: 595ms
Epoch: 010 | Train Loss: 0.0086099 | Grad norm: 0.034564 | Time: 4s200ms
Epoch: 010 | Test Loss: 0.0086161 | Time: 694ms
==> Save the model at epoch 010 with test loss 0.0086161
Epoch: 011 | Train Loss: 0.0083848 | Grad norm: 0.031527 | Time: 4s264ms
Epoch: 011 | Test Loss: 0.0085445 | Time: 499ms
==> Save the model at epoch 011 with test loss 0.0085445
Epoch: 012 | Train Loss: 0.0082045 | Grad norm: 0.032269 | Time: 4s112ms
Epoch: 012 | Test Loss: 0.0082167 | Time: 496ms
==> Save the model at epoch 012 with test loss 0.0082167
Epoch: 013 | Train Loss: 0.0081939 | Grad norm: 0.032407 | Time: 4s231ms
Epoch: 013 | Test Loss: 0.0082641 | Time: 504ms
Epoch: 014 | Train Loss: 0.0081456 | Grad norm: 0.031891 | Time: 4s470ms
Epoch: 014 | Test Loss: 0.0086321 | Time: 586ms
Epoch: 015 | Train Loss: 0.0080084 | Grad norm: 0.029254 | Time: 4s262ms
Epoch: 015 | Test Loss: 0.0084984 | Time: 508ms
Epoch: 016 | Train Loss: 0.0079283 | Grad norm: 0.027646 | Time: 4s405ms
Epoch: 016 | Test Loss: 0.0083635 | Time: 570ms
Epoch: 017 | Train Loss: 0.0079057 | Grad norm: 0.028120 | Time: 4s150ms
Epoch: 017 | Test Loss: 0.0081039 | Time: 527ms
==> Save the model at epoch 017 with test loss 0.0081039
Epoch: 018 | Train Loss: 0.0078327 | Grad norm: 0.025643 | Time: 4s381ms
Epoch: 018 | Test Loss: 0.0079672 | Time: 515ms
==> Save the model at epoch 018 with test loss 0.0079672
Epoch: 019 | Train Loss: 0.0078380 | Grad norm: 0.027475 | Time: 4s387ms
Epoch: 019 | Test Loss: 0.0079481 | Time: 531ms
==> Save the model at epoch 019 with test loss 0.0079481
Epoch: 020 | Train Loss: 0.0078173 | Grad norm: 0.024743 | Time: 4s350ms
Epoch: 020 | Test Loss: 0.0082760 | Time: 498ms
Epoch: 021 | Train Loss: 0.0077017 | Grad norm: 0.025282 | Time: 4s218ms
Epoch: 021 | Test Loss: 0.0079808 | Time: 496ms
Epoch: 022 | Train Loss: 0.0077309 | Grad norm: 0.025662 | Time: 4s273ms
Epoch: 022 | Test Loss: 0.0080102 | Time: 580ms
Epoch: 023 | Train Loss: 0.0076494 | Grad norm: 0.024825 | Time: 4s94ms
Epoch: 023 | Test Loss: 0.0079524 | Time: 521ms
Epoch: 024 | Train Loss: 0.0075961 | Grad norm: 0.023211 | Time: 4s329ms
Epoch: 024 | Test Loss: 0.0077770 | Time: 525ms
==> Save the model at epoch 024 with test loss 0.0077770
Epoch: 025 | Train Loss: 0.0075579 | Grad norm: 0.022850 | Time: 4s206ms
Epoch: 025 | Test Loss: 0.0077427 | Time: 500ms
==> Save the model at epoch 025 with test loss 0.0077427
Epoch: 026 | Train Loss: 0.0075056 | Grad norm: 0.022019 | Time: 4s334ms
Epoch: 026 | Test Loss: 0.0079543 | Time: 575ms
Epoch: 027 | Train Loss: 0.0074752 | Grad norm: 0.022064 | Time: 4s215ms
Epoch: 027 | Test Loss: 0.0077071 | Time: 505ms
==> Save the model at epoch 027 with test loss 0.0077071
Epoch: 028 | Train Loss: 0.0074192 | Grad norm: 0.020559 | Time: 4s152ms
Epoch: 028 | Test Loss: 0.0078117 | Time: 497ms
Epoch: 029 | Train Loss: 0.0074125 | Grad norm: 0.021334 | Time: 4s254ms
Epoch: 029 | Test Loss: 0.0077033 | Time: 498ms
==> Save the model at epoch 029 with test loss 0.0077033
Epoch: 030 | Train Loss: 0.0073693 | Grad norm: 0.019783 | Time: 4s510ms
Epoch: 030 | Test Loss: 0.0077573 | Time: 497ms
Epoch: 031 | Train Loss: 0.0073129 | Grad norm: 0.018700 | Time: 4s353ms
Epoch: 031 | Test Loss: 0.0076197 | Time: 506ms
==> Save the model at epoch 031 with test loss 0.0076197
Epoch: 032 | Train Loss: 0.0072735 | Grad norm: 0.018656 | Time: 4s383ms
Epoch: 032 | Test Loss: 0.0076412 | Time: 504ms
Epoch: 033 | Train Loss: 0.0072338 | Grad norm: 0.018421 | Time: 4s120ms
Epoch: 033 | Test Loss: 0.0075883 | Time: 570ms
==> Save the model at epoch 033 with test loss 0.0075883
Epoch: 034 | Train Loss: 0.0072148 | Grad norm: 0.018036 | Time: 4s69ms
Epoch: 034 | Test Loss: 0.0075432 | Time: 499ms
==> Save the model at epoch 034 with test loss 0.0075432
Epoch: 035 | Train Loss: 0.0071646 | Grad norm: 0.016727 | Time: 4s338ms
Epoch: 035 | Test Loss: 0.0074927 | Time: 498ms
==> Save the model at epoch 035 with test loss 0.0074927
Epoch: 036 | Train Loss: 0.0071428 | Grad norm: 0.016288 | Time: 4s298ms
Epoch: 036 | Test Loss: 0.0074896 | Time: 603ms
==> Save the model at epoch 036 with test loss 0.0074896
Epoch: 037 | Train Loss: 0.0071197 | Grad norm: 0.015673 | Time: 4s279ms
Epoch: 037 | Test Loss: 0.0074758 | Time: 519ms
==> Save the model at epoch 037 with test loss 0.0074758
Epoch: 038 | Train Loss: 0.0070978 | Grad norm: 0.015254 | Time: 4s333ms
Epoch: 038 | Test Loss: 0.0074561 | Time: 494ms
==> Save the model at epoch 038 with test loss 0.0074561
Epoch: 039 | Train Loss: 0.0070829 | Grad norm: 0.014843 | Time: 3s887ms
Epoch: 039 | Test Loss: 0.0074595 | Time: 502ms
Epoch: 040 | Train Loss: 0.0070741 | Grad norm: 0.014593 | Time: 4s235ms
Epoch: 040 | Test Loss: 0.0074516 | Time: 506ms
==> Save the model at epoch 040 with test loss 0.0074516
Total time: 3m11s
==> Saving trained model weights...
==> Input bias to be applied to the neural network (trained):
[0. 0. 0. 0.]
==> Input transform to be applied to the neural network (trained):
[0.7072636  0.72212595 0.6760411  0.67349136]
==> Output transform to be applied to the neural network (trained):
[0.2287 0.2871]
==> Saving training info...
==> Drawing training loss...
==> Drawing grad norm...
==> Drawing testing loss...
==> Process finished.
